@startuml

skinparam packageStyle rectangle
skinparam componentStyle uml2

package "pokemon-battle" {
    package "pkg" {
        package "battle" {
            package "domain" {
                class Battle {
                    + ID: string
                    + Pokemon1: *Pokemon
                    + Pokemon2: *Pokemon
                    + Status: BattleStatus
                    + NewBattle()
                    + ExecuteMove()
                }
                
                class Pokemon {
                    + ID: string
                    + CurrentHP: int
                    + MaxHP: int
                    + Speed: int
                    + Status: string
                    + Moves: []Move
                }
                
                class Move {
                    + ID: string
                    + Power: int
                    + Accuracy: int
                    + Priority: int
                }

                enum BattleStatus {
                    + ONGOING
                    + FINISHED
                }
            }
            
            package "ports" {
                interface BattlePort {
                    + ExecuteTurn()
                    + ExecuteMove()
                    + GetBattleStatus()
                }

                class BattleStatus {
                    + BattleID: string
                    + Pokemon1: PokemonStatus
                    + Pokemon2: PokemonStatus
                    + IsFinished: bool
                    + Winner: *string
                }

                class PokemonStatus {
                    + PokemonID: string
                    + CurrentHP: int
                    + MaxHP: int
                    + Status: string
                }
            }
            
            package "service" {
                class BattleService {
                    - battles: map[string]*Battle
                    - moves: map[string]*Move
                    + RegisterBattle()
                    + RegisterMove()
                    + ExecuteTurn()
                    + ExecuteMove()
                    + GetBattleStatus()
                }
            }
        }
    }
    
    package "cmd" {
        class Main {
            + determineTurnOrder()
            + main()
        }
    }
}

' 依存関係
BattleService ..|> BattlePort : implements
BattleService --> Battle : uses
BattleService --> Move : manages
Battle --> Pokemon : contains
Battle --> Move : uses
Main --> BattleService : uses
Main --> Battle : creates
Main --> Pokemon : creates
Main --> Move : creates

@enduml 